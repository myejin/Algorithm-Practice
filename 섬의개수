def start(map, visit):
    for i in range(h):
        for j in range(w):
            if map[i][j] == 1 and visit[i][j] == 0:
                return (i, j)
    return (h + 1, w + 1)

def solution(w, h):
    map = [[0] * w for _ in range(h)]
    for i in range(h):
        tmp = input().split(" ")
        for j in range(len(tmp)):
            map[i][j] = int(tmp[j])
    #print(map)

    visit = [[0] * w for _ in range(h)]
    count = 0
    while True:
        s = start(map, visit)
        if s == (h + 1, w + 1):
            break
        stack = [s, ]
        while True:
            if len(stack) == 0:
                break
            a, b = stack.pop()
            visit[a][b] = 1
            dx = [0, -1, -1, -1, 0, 1, 1, 1]
            dy = [1, 1, 0, -1, -1, -1, 0, 1]
            for i in range(8):
                x = a + dx[i]
                y = b + dy[i]
                if x < 0 or x >= h or y < 0 or y >= w:
                    continue
                if visit[x][y] == 0 and map[x][y] == 1:
                    stack.append((x, y))
        count += 1
    return count

while True:
    w, h = map(int, input().split(" "))
    if w == 0 and h == 0:
        break
    s = solution(w, h)
    print(s)
