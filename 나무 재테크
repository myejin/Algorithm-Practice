import sys
input = sys.stdin.readline

dx = [-1, -1, -1, 0, 0, 1, 1, 1]
dy = [-1, 0, 1, -1, 1, -1, 0, 1]

def four_season():
    for r in range(N):
        for c in range(N):
            tree[r][c].sort()
            for t in range(len(tree[r][c])):
                #print(r, c, t, tree[r][c])
                if arr[r][c] >= tree[r][c][t]:
                    arr[r][c] -= tree[r][c][t] 
                    tree[r][c][t] += 1  
                else:
                    for i in range(t, len(tree[r][c])):
                        arr[r][c] += tree[r][c][i] // 2
                    del tree[r][c][t:]
                    break

    for r in range(N):
        for c in range(N):
            for t in tree[r][c]:
                if t % 5 == 0:
                    for d in range(8):
                        x = r + dx[d]
                        y = c + dy[d]
                        if 0 <= x < N and 0 <= y < N:
                            tree[x][y].append(1) 
            arr[r][c] += A[r][c]


def tree_count():
    cnt = 0
    for r in range(N):
        for c in range(N):
            cnt += len(tree[r][c])
    return cnt


N, M, K = map(int, input().split()) 

A = [] 
for _ in range(N):
    A.append(list(map(int, input().split())))

tree = [[[] for _ in range(N)] for _ in range(N)]
for _ in range(M):
    x, y, z = map(int, input().split()) 
    tree[x-1][y-1].append(z)

arr = [[5] * N for _ in range(N)] 

for _ in range(K):
    four_season()

print(tree_count())
